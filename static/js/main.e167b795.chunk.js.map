{"version":3,"sources":["components/home/Particle.js","components/home/DelayLink.js","components/home/Navigation.js","action/changeLog.js","components/home/Home.js","components/about/About.js","components/work/Work.js","components/contact/Contact.js","components/Erreur.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Particle","state","width","height","updateWindowDimensions","_this","setState","concat","window","innerWidth","innerHeight","this","addEventListener","removeEventListener","_this$state","console","log","react_default","a","createElement","particles_default","Object","assign","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","Component","DelayLink","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","_this$props","replace","to","delay","onDelayStart","onDelayEnd","history","context","router","defaultPrevented","preventDefault","timeout","setTimeout","clearTimeout","react_router_dom","onClick","React","defaultProps","contextTypes","NavLink","Navigation","toggleNav","isOpen","sidenaveffect","current","style","transition","mySidenav","changeLog","createRef","className","id","ref","href","DelayLink_DelayLink","data-text","src","alt","connect","dispatch","Home","home_Particle","home_Navigation","About","Work","Contact","Erreur","styles","root","textAlign","background","display","justifyContent","alignItems","App","react_router","path","component","exact","Boolean","location","hostname","match","initState","rootReducer","arguments","length","undefined","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e167b795.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nclass Particle extends Component {\n  state = { width: \"0px\", height: \"0px\" };\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateWindowDimensions = () => {\n    this.setState({\n      width: `${window.innerWidth}px`,\n      height: `${window.innerHeight}px`\n    });\n  };\n  render() {\n    const { width, height } = this.state;\n    console.log(width, height);\n    return (\n      <Particles\n        {...this.state}\n        params={{\n          particles: {\n            number: { value: 80, density: { enable: true, value_area: 800 } },\n            color: { value: \"#0000ff\" },\n            shape: {\n              type: \"circle\",\n              stroke: { width: 0, color: \"#0000ff\" },\n              polygon: { nb_sides: 5 }\n            },\n            opacity: {\n              value: 0.5,\n              random: false,\n              anim: { enable: false, speed: 1, opacity_min: 0.1, sync: false }\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: { enable: false, speed: 40, size_min: 0.1, sync: false }\n            },\n            line_linked: {\n              enable: true,\n              distance: 150,\n              color: \"#000\",\n              opacity: 0.4,\n              width: 1\n            },\n            move: {\n              enable: true,\n              speed: 4,\n              direction: \"none\",\n              random: false,\n              straight: false,\n              out_mode: \"out\",\n              bounce: false,\n              attract: { enable: false, rotateX: 600, rotateY: 1200 }\n            }\n          },\n          interactivity: {\n            detect_on: \"canvas\",\n            events: {\n              onhover: { enable: true, mode: \"repulse\" },\n              onclick: { enable: true, mode: \"push\" },\n              resize: true\n            },\n            modes: {\n              grab: { distance: 400, line_linked: { opacity: 1 } },\n              bubble: {\n                distance: 400,\n                size: 40,\n                duration: 2,\n                opacity: 8,\n                speed: 3\n              },\n              repulse: { distance: 200, duration: 0.4 },\n              push: { particles_nb: 4 },\n              remove: { particles_nb: 2 }\n            }\n          },\n          retina_detect: true\n        }}\n      />\n    );\n  }\n}\n\nexport default Particle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n/**\n * Wraps the React Router Link component and creates a delay after the link is clicked.\n */\nexport default class DelayLink extends React.Component {\n  static propTypes = {\n    /**\n     * Milliseconds to wait before registering the click.\n     */\n    delay: PropTypes.number,\n    /**\n     * Called after the link is clicked and before the delay timer starts.\n     */\n    onDelayStart: PropTypes.func,\n    /**\n     * Called after the delay timer ends.\n     */\n    onDelayEnd: PropTypes.func\n  };\n\n  static defaultProps = {\n    delay: 0,\n    onDelayStart: () => {},\n    onDelayEnd: () => {}\n  };\n\n  static contextTypes = NavLink.contextTypes;\n\n  constructor(props) {\n    super(props);\n    this.timeout = null;\n  }\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /**\n   * Called when the link is clicked\n   *\n   * @param {Event} e\n   */\n  handleClick = e => {\n    const { replace, to, delay, onDelayStart, onDelayEnd } = this.props;\n    const { history } = this.context.router;\n\n    onDelayStart(e, to);\n    if (e.defaultPrevented) {\n      return;\n    }\n    e.preventDefault();\n\n    this.timeout = setTimeout(() => {\n      if (replace) {\n        history.replace(to);\n      } else {\n        history.push(to);\n      }\n      onDelayEnd(e, to);\n    }, delay);\n  };\n\n  render() {\n    const props = Object.assign({}, this.props);\n    delete props.delay;\n    delete props.onDelayStart;\n    delete props.onDelayEnd;\n\n    return <NavLink {...props} onClick={this.handleClick} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { changeLog } from \"../../action/changeLog\";\nimport DelayLink from \"./DelayLink\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidenaveffect = React.createRef();\n    this.mySidenav = React.createRef();\n  }\n  toggleNav = () => {\n    if (this.props.isOpen) {\n      this.sidenaveffect.current.style.width = \"100%\";\n      this.sidenaveffect.current.style.transition = \"0.5s\";\n      this.mySidenav.current.style.width = \"100%\";\n      this.mySidenav.current.style.transition = \"1s\";\n      this.props.changeLog();\n    } else {\n      this.sidenaveffect.current.style.width = \"0%\";\n      this.sidenaveffect.current.style.transition = \"1s\";\n      this.mySidenav.current.style.width = \"0\";\n      this.mySidenav.current.style.transition = \"0.5s\";\n      this.props.changeLog();\n    }\n  };\n  render() {\n    return (\n      <section className=\"sidemenu\">\n        <div\n          id=\"mySidenavEffect\"\n          className=\"sidenaveffect\"\n          ref={this.sidenaveffect}\n        />\n        <div id=\"mySidenav\" className=\"sidenav\" ref={this.mySidenav}>\n          <div\n            className={\n              this.props.isOpen\n                ? \"slidingTag \"\n                : \"slidingTag slidingTag-modifier\"\n            }\n          />\n          <a\n            href=\"javascript:void(0)\"\n            className=\"closebtn\"\n            onClick={this.toggleNav}\n          >\n            &times;\n          </a>\n          <DelayLink\n            delay={1500}\n            to=\"/\"\n            className={this.props.isOpen ? \"mySidenav1 \" : \"mySidenav1 fade-in\"}\n            data-text=\"HOME\"\n            onDelayStart={this.toggleNav}\n            //onClick={this.toggleNav}\n          >\n            Home\n          </DelayLink>\n          <NavLink\n            to=\"/about\"\n            className={this.props.isOpen ? \"mySidenav2\" : \"mySidenav2 fade-in \"}\n            data-text=\"ABOUT\"\n            onClick={this.toggleNav}\n          >\n            About\n          </NavLink>\n          <NavLink\n            to=\"/work\"\n            className={this.props.isOpen ? \"mySidenav3 \" : \"mySidenav3 fade-in\"}\n            data-text=\"WORK\"\n            onClick={this.toggleNav}\n          >\n            Work\n          </NavLink>\n          <NavLink\n            to=\"/contact\"\n            className={this.props.isOpen ? \"mySidenav4 \" : \"mySidenav4 fade-in\"}\n            data-text=\"CONTACT\"\n            onClick={this.toggleNav}\n          >\n            Contact\n          </NavLink>\n        </div>\n\n        <div className=\"menu-button\" onClick={this.toggleNav}>\n          <img src=\"./list.svg\" alt=\"\" className=\"list\" />\n          <ul className=\"menu\">\n            <li>M</li>\n            <li>E</li>\n            <li>N</li>\n            <li>U</li>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.isOpen\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLog: () => dispatch(changeLog())\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navigation);\n","export const changeLog = () => {\n  return {\n    type: \"CHANGE_LOG\"\n  };\n};\n","import React, { Component } from \"react\";\nimport Particle from \"./Particle\";\nimport Navigation from \"./Navigation\";\nimport { connect } from \"react-redux\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Particle />\n        <Navigation />\n        <div className=\"logo\">\n          <img\n            src=\"anass.svg\"\n            alt=\"\"\n            id=\"logo\"\n            className={this.props.isOpen ? \"logoEffectBasic\" : \"logoEffect\"}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.isOpen\n  };\n};\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport Navigation from \"../home/Navigation\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Navigation />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Navigation from \"../home/Navigation\";\n\nclass Work extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Navigation />\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React, { Component } from \"react\";\nimport Navigation from \"../home/Navigation\";\n\nclass Contact extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Navigation />\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\n\nclass Erreur extends Component {\n  state = {};\n  render() {\n    return <div>erreur</div>;\n  }\n}\n\nexport default Erreur;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n//import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Home from \"./components/home/Home\";\nimport \"./App.css\";\nimport About from \"./components/about/About\";\nimport Work from \"./components/work/Work\";\nimport Contact from \"./components/contact/Contact\";\nimport Erreur from \"./components/Erreur\";\nconst styles = {\n  root: {\n    textAlign: \"center\",\n    height: \"100%\",\n    background: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={styles.root}>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/work\" component={Work} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route component={Erreur} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  isOpen: true\n};\nconst rootReducer = (state = initState, action) => {\n  if (action.type === \"CHANGE_LOG\") {\n    return {\n      isOpen: !state.isOpen\n    };\n  }\n  return state;\n};\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}